import { useState, useEffect } from 'react';
import jwt_decode from 'jwt-decode';


export const useGetRoleID = () => { 

    const [userRole, setUserRole] = useState(null)

    useEffect(() => {

        const getRoleID = async () => {

            try {

                const response = await fetch(`http://localhost:5001/api/whitelist/getUserRole`) 

                if(response.status === 200) {

                    const data = await response.json()
                    const token = data.token

                    const decodedToken: { role: string } = jwt_decode(token)
                    const role = decodedToken.role
                   
                    setUserRole(userRole)

                } 
            } catch (error) {

                console.error('Error: ', error);
                
            }
        }

        getRoleID()

        
    }, []);


    const updateRole = async (userId, newRole) => {

        try {

            const response = await fetch(`http://localhost:5001/api/users/updateRole/${userId}`, {
                method: 'PUT',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify({ role: newRole }),
              });
    
            if(response.status === 200) {
                setUserRole(newRole)
            }
            else
            {

            }

        } catch(error) {
            console.error('Error', error)

        
    }

    return { userRole, updateRole };
 }
}
